plugins {
    id 'net.researchgate.release' version '2.1.2'
}
apply plugin: 'com.android.library'

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.1"
    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
        }
    }

    compileOptions {
        encoding "UTF-8"
    }

    packagingOptions {
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile 'com.fasterxml.jackson.core:jackson-databind:2.4.4'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.4.4'
    compile 'com.fasterxml.jackson.core:jackson-core:2.4.4'
    testCompile 'org.robolectric:robolectric:3.0-rc3'
}

ext {
    bintrayRepo = 'maven'
    bintrayName = 'com.github.kaiwinter:android-remote-notifications'

    publishedGroupId = 'com.github.kaiwinter'
    libraryName = 'android-remote-notifications'
    artifact = 'android-remote-notifications'

    libraryDescription = 'Pulls notifications from a remote JSON file and shows them in your app.'

    siteUrl = 'https://github.com/kaiwinter/android-remote-notifications'
    gitUrl = 'https://github.com/kaiwinter/android-remote-notifications.git'

    libraryVersion = '1.0.0'

    developerId = 'kaiwinter'
    developerName = 'Kai Winter'
    developerEmail = 'kaiwinter@gmx.de'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}
// https://gist.github.com/kellyfj/9666950
android.libraryVariants.all { variant ->
    def name = variant.buildType.name
    if (name.equals(com.android.builder.core.BuilderConstants.DEBUG)) {
        return; // Skip debug builds.
    }
    def task = project.tasks.create "jar${name.capitalize()}", Jar
    task.dependsOn variant.javaCompile
    task.from variant.javaCompile.destinationDir
    task.from configurations.compile.findAll {
        it.getName() != 'android.jar' && !it.getName().startsWith('junit') && !it.getName().startsWith('hamcrest')
    }.collect {
        it.isDirectory() ? it : zipTree(it)
    }
    artifacts.add('archives', task);
}

apply from: 'https://raw.githubusercontent.com/kaiwinter/JCenter/master/installv1.gradle'
apply from: 'https://raw.githubusercontent.com/kaiwinter/JCenter/master/bintrayv1.gradle'